@page "/"
@using Microsoft.AspNetCore.Components.Web.Virtualization
@if (loaded)
{
    <MCard __internal_preventDefault_oncontextmenu>
        <MSimpleTable Dark
                  Dense
                  FixedHeader
                  Height=@("calc(100vh - 48px)") Style="user-select: none;">
            <thead>
                <tr>
                    <th class="text-left">
                        <MMenu OffsetY>
                            <ActivatorContent>
                                <MButton Small Icon @attributes="@context.Attrs">
                                    <MIcon>mdi-filter-variant-minus</MIcon>
                                </MButton>
                            </ActivatorContent>

                            <ChildContent>
                                <MList>
                                    <MListItem>
                                        <MListItemContent>
                                            <MListItemTitle>
                                                123123123
                                            </MListItemTitle>
                                        </MListItemContent>
                                    </MListItem>
                                    <MListItem>
                                        <MListItemContent>
                                            <MListItemTitle>
                                                234234234
                                            </MListItemTitle>
                                        </MListItemContent>
                                    </MListItem>
                                    <MListItem>
                                        <MListItemContent>
                                            <MListItemTitle>
                                                345345345
                                            </MListItemTitle>
                                        </MListItemContent>
                                    </MListItem>
                                </MList>
                            </ChildContent>
                        </MMenu>
                    </th>
                    <th class="text-left" @onclick="Show1">
                        Name
                    </th>
                    <th class="text-left">
                        Age
                    </th>
                    <th class="text-left">
                        Addr
                    </th>
                </tr>
            </thead>
            <tbody>
                <Virtualize Context="item" OverscanCount="100" ItemSize="25" ItemsProvider="@LoadEmployees">
                    <tr class="@(item.Select?"log_table_select":"log_table")"
                    @ondblclick="Show"
                    @onclick="()=>RowClick(item)"
                    @key="item.Id">
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Age</td>
                        <td>@item.Addr</td>
                    </tr>
                </Virtualize>
            </tbody>
        </MSimpleTable>
    </MCard>
}
else
{
    <MSkeletonLoader Dark Class="mb-6" Boilerplate="true" Elevation="2" Type="table-heading, list-item-two-line,list-item-two-line,list-item-two-line, image, table-tfoot"></MSkeletonLoader>
}
<MMenu @bind-Value="showMenu"
       PositionX="X"
       PositionY="Y"
       Absolute
       Dark
       OffsetY NudgeWidth=200 CloseOnContentClick="false">

    <ChildContent>
        <MCard>
            <MList>
                <MListItem>
                    <MListItemAvatar>
                        <img src="https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png"
                             alt="MASA">
                    </MListItemAvatar>

                    <MListItemContent>
                        <MListItemTitle>MASA</MListItemTitle>
                        <MListItemSubtitle>Founder of MASA Blazor</MListItemSubtitle>
                    </MListItemContent>

                    <MListItemAction>
                        <MButton Icon Class=@(fav ? "red--text" : "") OnClick="() => fav = !fav">
                            <MIcon>mdi-heart</MIcon>
                        </MButton>
                    </MListItemAction>
                </MListItem>
            </MList>

            <MDivider></MDivider>

            <MList>
                <MListItem>
                    <MListItemAction>
                        <MSwitch @bind-Value="message" Color="purple"></MSwitch>
                    </MListItemAction>
                    <MListItemTitle>
                        Enable messages
                    </MListItemTitle>
                </MListItem>

                <MListItem>
                    <MListItemAction>
                        <MSwitch @bind-Value="hints" Color="purple"></MSwitch>
                    </MListItemAction>
                    <MListItemTitle>
                        Enable hints
                    </MListItemTitle>
                </MListItem>
            </MList>

            <MCardActions>
                <MSpacer></MSpacer>
                <MButton Text OnClick="() => menu = false">Cacnel</MButton>
                <MButton Text Color="primary" OnClick="() => menu = false">Save</MButton>
            </MCardActions>
        </MCard>
    </ChildContent>
</MMenu>

<MMenu @bind-Value="showMenu1"
       PositionX="X"
       PositionY="Y"
       Absolute
       Dark
       NudgeWidth=200 CloseOnContentClick="false">
    <ChildContent>
        <MCard>
            <MList>
                <MListItem>
                    <MListItemAvatar>
                        <img src="https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png"
                             alt="MASA">
                    </MListItemAvatar>

                    <MListItemContent>
                        <MListItemTitle>MASA</MListItemTitle>
                        <MListItemSubtitle>Founder of MASA Blazor</MListItemSubtitle>
                    </MListItemContent>

                    <MListItemAction>
                        <MButton Icon Class=@(fav ? "red--text" : "") OnClick="() => fav = !fav">
                            <MIcon>mdi-heart</MIcon>
                        </MButton>
                    </MListItemAction>
                </MListItem>
            </MList>
        </MCard>
    </ChildContent>
</MMenu>
@code {
    private bool loaded = false;
    private int length = 9999;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Random random = new();

        _items = await Task.Run(() =>
         {
             return Enumerable.Range(0, length).Select(i => new TableItem()
                 {
                     Id = i.ToString(),
                     Name = $"Name:{i}",
                     Addr = new string(Enumerable.Range(0, Random.Shared.Next(300)).Select(x => 'a').ToArray()),
                     Age = i
                 }).ToArray();
         });
        loaded = true;
        StateHasChanged();
    }
    private IEnumerable<TableItem> _items = Array.Empty<TableItem>();
    private void RowClick(TableItem o)
    {
        o.Select = !o.Select;
    }

    private async ValueTask<ItemsProviderResult<TableItem>> LoadEmployees(ItemsProviderRequest request)
    {
        var employees = _items.Skip(request.StartIndex).Take(request.Count);
        return new ItemsProviderResult<TableItem>(employees, length);
    }
    private List<DataTableHeader<TableItem>> _headers = new List<DataTableHeader<TableItem>>
        {
           new ()
           {
            Text= "Dessert (100g serving)",
            Align= "start",
             Filterable=true,
            Value= nameof(TableItem.Id)
          },
          new (){ Text= "Calories", Value= nameof(TableItem.Name)},
          new (){ Text= "Fat (g)", Value= nameof(TableItem.Age)},
          new (){ Text= "Carbs (g)", Value= nameof(TableItem.Addr)},
        };
    class TableItem
    {
        public string? Id { get; set; }
        public string? Name { get; set; }
        public int Age { get; set; } = 0;
        public string? Addr { get; set; }
        public bool Select { get; set; } = false;
    }
    bool showMenu = false;
    bool showMenu1 = false;
    double X = 0;
    double Y = 0;

    string[] menuItems =
    {
        "Click Me",
        "Click Me",
        "Click Me",
        "Click Me 2"
    };

    private async Task Show(MouseEventArgs args)
    {
        showMenu = false;
        await Task.Delay(16);

        X = args.ClientX;
        Y = args.ClientY;
        showMenu = true;
    }

    private async Task Show1(MouseEventArgs args)
    {
        showMenu1 = false;
        await Task.Delay(16);

        X = args.ClientX;
        Y = args.ClientY;
        showMenu1 = true;
    }
    bool fav = true;
    bool menu = false;
    bool message = false;
    bool hints = true;
}